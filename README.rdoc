
== Minesweeper
This minesweeper program was created under the GNU General Public License Version 3.

* Stephen Liang (sliang6)
* Aisha Halim (ahalim4)

Welcome to our Minesweeper game. In this readme file, we will discuss the data structures and algorithms within the game that we have created. We suppose you know all about how Minesweeper works (if you don't, check the Help dialog in game.) 

=== INSTRUCTIONS TO COMPILE AND RUN:

==== Linux:

* qmake
* make
* ./Minesweeper

==== Windows (Using Qt Command Prompt):

* qmake
* make -f Makefile.Release

You can then double click on Minesweeper.exe in the release folder

==== Mac OS X

* qmake -spec macx-g++
* make

You can then launch Minesweeper.app in the current working directory

=== Overview:

First of all, we utilize Qt to the fullest extent. The mainwindow class contains all the necessary rules of minesweeper in order to play while the minesweeper class contains the actual minesweeper board. A variety of other classes have been created for the sole purpose of displaying a dialog box. These classes are somewhat short but powerful in what they are capable of doing.

==== MainWindow:

MainWindow is a class that does just about everything. This class handles all the buttons pushed, all the menus, all the dialog boxes, and all the rules of the Minesweeper game. The MainWindow UI contains two lcd number displays (mines left and current time since start) and contains a container for all the mines that will be dynamically generated. The cpp code then generate all the buttons necessary for the program to run and connects them with the signals that we want to utilize in the game. 

After much work, the MainWindow then handles the lose and win conditions by calling upon other objects to be instantiated and then displayed.

==== MineSweeper:

MineSweeper contains the actual multidimensional array of mines and counters for the adjacent mines. The algorithm is simple, generate 10 random mine locations and then increment all adjacent cells.

==== MineSweeperButton:

Since QPushButton is unable to provide us with the right clicking functionality we needed for MineSweeper, we inherited QPushButton and then reimplemented a function necessary to the right clicking functionality.

==== SaveScore:

SaveScore uses sqlite technology to store scores and names into a database. We use QtSql to enable us to easily store data.

==== TopTen:

TopTen also uses sqlite technology to retrieve scores and names. Using a crafted query, we can obtain the top ten players easily. We can also truncate the entire table with a query.

==== AboutWindow:

AboutWindow simply shows information about the game. Check it out!

==== HelpWindow:

HelpWindow simply shows information about how to play MineSweeper.

=== Conclusions:

Overall, this game was a great introduction to learning about the Qt framework. The experience was pleasant through the use of the git version control software and working in the group was a pleasant experience. We hope you enjoy playing Minesweeper!

==== Errata:

The pink unicorn picture for the help window is from Wikimedia Commons. The link: http://ast.wikipedia.org/wiki/Archivu:Invisible_Pink_Unicorn.svg

All other icon images were produced by us on Inkscape, and fall under the GP v 3 license.

Contact us with any other issues through GitHub. Enjoy!
